{"/home/travis/build/npmtest/node-npmtest-manifoldjs/test.js":"/* istanbul instrument in package npmtest_manifoldjs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/lib.npmtest_manifoldjs.js":"/* istanbul instrument in package npmtest_manifoldjs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_manifoldjs = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_manifoldjs = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-manifoldjs && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_manifoldjs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_manifoldjs\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_manifoldjs.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_manifoldjs.rollup.js'] =\n            local.assetsDict['/assets.npmtest_manifoldjs.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_manifoldjs.__dirname + '/lib.npmtest_manifoldjs.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/index.js":"﻿/**\r\n * **NOTE**: Use of manifoldjs as a library is now DEPRECATED. Use manifoldjs-lib instead.\r\n *\r\n * The top-level API for `manifoldjs`. Provides access to the key libraries in\r\n * manifoldjs so you can write your own tools using `manifoldjs` as a library.\r\n *\r\n * Usage\r\n * -----\r\n *\r\n *      var manifoldjs = require('manifoldjs');\r\n *\r\n */\r\n\r\nvar lib = require('manifoldjs-lib');\r\nvar libValidationContants = lib.constants.validation;\r\n\r\n// Maintain compatibility with original constant definitions\r\nvar validationConstants = {\r\n  levels:           libValidationContants.levels,\r\n  codes:            libValidationContants.codes,\r\n  manifestMembers:  libValidationContants.manifestMembers,\r\n  platforms: {\r\n    all: 'all',\r\n    android: 'android',\r\n    chrome: 'chrome',\r\n    firefox: 'firefox',\r\n    ios: 'ios',\r\n    windows: 'windows'\r\n  },\r\n  platformDisplayNames: {\r\n    all: 'All Platforms',\r\n    android: 'Android',\r\n    chrome: 'Chrome',\r\n    firefox: 'Firefox',\r\n    ios: 'iOS',\r\n    windows: 'Windows'\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  manifestTools:        lib.manifestTools,\r\n  validationConstants:  validationConstants,\r\n  projectBuilder:       lib.projectBuilder,\r\n  projectTools:         lib.projectTools\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/index.js":"'use strict';\r\n\r\nmodule.exports = {\r\n  ProgressIndicator: require('./lib/progress'),\r\n  PlatformBase: require('./lib/platformBase'),\r\n  CustomError: require('./lib/customError'),\r\n  constants: require('./lib/constants'),\r\n  utils: require('./lib/utils'),\r\n  validations: require('./lib/validations'),\r\n  manifestTools: require('./lib/manifestTools'),\r\n  projectBuilder: require('./lib/projectBuilder'),\r\n  projectTools: require('./lib/projectTools'),\r\n  platformTools: require('./lib/platformTools'),\r\n  packageTools: require('./lib/packageTools'),\r\n  processTools: require('./lib/processTools'),\r\n  fileTools: require('./lib/fileTools'),\r\n  iconTools: require('./lib/iconTools'),\r\n  log: require('./lib/log')\r\n};","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/progress.js":"'use strict';\r\n\r\nvar ansi = require('ansi'); \r\n\r\nvar style = {\r\n  compact: 0,\r\n  bar: 1\r\n};\r\n\r\nvar compactText = '\\u2014\\\\|/';\r\n// var compactText = ' .*°*.';\r\n\r\nfunction ProgressIndicator (message, options, updateFrequency, stream) {  \r\n\r\n  function fillChars (char, length) {\r\n    return Array.apply(null, new Array(length)).map(function () {\r\n      return char;\r\n    }).join('');\r\n  }\r\n   \r\n  function renderBar (value) {\r\n    var len = value % width;\r\n    if (len === 0) {\r\n      decrement = !decrement;\r\n    }\r\n    \r\n    if (decrement) {\r\n      len = Math.abs(len - width + 1);      \r\n    }\r\n    return '[' + fillChars('▓', len) + fillChars('░', width - len - 1) + ']';\r\n  }\r\n\r\n  function renderCompact (value) {\r\n    return '(' + compactText[value] + ')';\r\n  }\r\n\r\n  var self = this;\r\n    \r\n  var cursor, width, render, timer;\r\n  \r\n  message = message || '';    \r\n  stream = stream || process.stdout;\r\n  options = options || {};\r\n  switch (options.style || style.compact) {\r\n    case style.compact:\r\n      width = compactText.length;\r\n      render = renderCompact;\r\n      break;\r\n    case style.bar:\r\n      width = options.width || 20;\r\n      render = renderBar;\r\n      break;\r\n  }\r\n  \r\n  var decrement = true;\r\n  var index = 0;  \r\n  \r\n  if (stream.isTTY) {\r\n    cursor = ansi(stream);\r\n  }\r\n\r\n  process.on('beforeExit', function () {\r\n    self.reset();\r\n  });\r\n\r\n  self.update = function update () {\r\n    if (cursor) {\r\n      // savePosition & restorePosition do not seem to work in Mac OS X\r\n      // replaced with horizontalAbsolute\r\n      cursor //.savePosition()\r\n            .write(message + render(index))\r\n            // .restorePosition()\r\n            .horizontalAbsolute(0)\r\n            .reset();      \r\n    }\r\n  };\r\n  \r\n  self.start = function start (msg) {\r\n    self.reset();\r\n    \r\n    if (msg) {\r\n      message = msg;\r\n    }\r\n    \r\n    if (cursor) {\r\n      cursor.hide();\r\n      self.update();\r\n      timer = setInterval(function () {\r\n        index = ++index % width;\r\n        self.update();\r\n      }, options.updateFrequency || 100);\r\n      timer.unref();\r\n    }    \r\n  };\r\n  \r\n  self.reset = function reset () {\r\n    if (timer) {\r\n      clearInterval(timer);\r\n      timer = null;      \r\n    }\r\n    \r\n    if (cursor) {\r\n      cursor.eraseLine();\r\n      cursor.reset();\r\n      cursor.show();\r\n    }\r\n    \r\n    index = 0;\r\n  };\r\n}\r\n\r\nProgressIndicator.style = style;\r\n\r\nmodule.exports = ProgressIndicator;\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/platformBase.js":"'use strict';\r\n\r\nvar fs = require('fs'),\r\n    path = require('path'),\r\n    Q = require('q'),\r\n    url = require('url');\r\n    \r\nvar\tfileTools = require('./fileTools'),\r\n    iconTools = require('./iconTools'),\r\n    log = require('./log'),\r\n    manifestTools = require('./manifestTools'),\r\n    packageTools = require('./packageTools'),\r\n    utils = require('./utils');\r\n\r\nfunction PlatformBase (id, name, packageName, baseDir) {\r\n  var self = this;\r\n  \r\n  self.id = id;\r\n  self.name = name;\r\n  self.packageName = packageName;\r\n  self.baseDir = baseDir;\r\n  self.log = log;\r\n\r\n  /**\r\n   * Creates a fully-functional hosted web application application for the platform.\r\n   * \r\n   * This function must be overridden by subclasses.\r\n   */\r\n  self.create = function (w3cManifestInfo, rootDir, options, callback) {\r\n    return Q.reject(new Error('The \\'create\\' operation is not implemented for platform: ' + self.id))\r\n            .nodeify(callback);\r\n  };\r\n  \r\n  /**\r\n   * Runs the application created using the `create` operation.\r\n   * \r\n   * This function is optional. It can be overridden by subclasses. \r\n   */\r\n  self.run = function (projectDir, options, callback) {\r\n    self.warn('The \\'run\\' command is not implemented for platform: ' + self.id);\r\n    return Q.resolve().nodeify(callback);\r\n  };\r\n\r\n  /**\r\n   * Packages the application for publication to the platform's store.\r\n   * \r\n   * This function is optional. It can be overridden by subclasses. \r\n   */\r\n  self.package = function (projectDir, options, callback) {\r\n    self.warn('The \\'package\\' command is not implemented for platform: ' + self.id);\r\n    return Q.resolve().nodeify(callback);\r\n  };\r\n  \r\n  /**\r\n   * Opens the source code for the platform.\r\n   * \r\n   * This function is optional. It can be overridden by subclasses. \r\n   */\r\n  self.open = function (projectDir, options, callback) {\r\n    self.warn('The \\'open\\' command is not implemented for platform: ' + self.id);\r\n    return Q.resolve().nodeify(callback);\r\n  };\r\n\r\n  /**\r\n   * Loads validation rules from the 'validationRules' folder of the platform project. The \r\n   * validation rules ensure the W3C manifest meets the requirements for your platform.\r\n   * \r\n   * This function is optional. A platform should override it to use a different strategy for \r\n   * loading its validation rules.\r\n   */\r\n  self.getValidationRules = function (platforms, callback) {\r\n    \r\n    if (!self.baseDir) {\r\n      self.warn('Missing base directory for platform: ' + self.id + '.');\r\n      return Q.resolve([]).nodeify(callback);\r\n    }\r\n\r\n    // first look for a 'validationRules' directory  \r\n    var validationRulesDir = path.join(self.baseDir, 'validationRules');\r\n    return Q.nfcall(fs.stat, validationRulesDir).then(function (stats) {\r\n      if (stats.isDirectory()) {\r\n        return manifestTools.loadValidationRules(validationRulesDir, platforms);\r\n      }              \r\n    })\r\n    .catch(function () {\r\n      // then look for a 'validationRules.js' file\r\n      var validationRulesFile = validationRulesDir + '.js';\r\n      return Q.nfcall(fs.stat, validationRulesFile).then(function (stats) {\r\n        if (stats.isFile()) {\r\n          return manifestTools.loadValidationRules(validationRulesFile, platforms);\r\n        }\r\n        \r\n        self.warn('Failed to retrieve the validation rules for platform: ' + self.id + '. The validation rules folder is missing or invalid.');\r\n        return Q.resolve([]);\r\n      });\r\n    })\r\n    .nodeify(callback);\r\n  };\r\n\r\n  /**\r\n   * Returns an array of icons files as defined in the manifest. The method assumes that all icons \r\n   * are are square and defined as properties of an 'icons' member, for example:\r\n   *   \"icons\": {\r\n   *       \"30\": \"/images/smalllogo.png\",\r\n   *       \"50\": \"/images/storelogo.png\",\r\n   *       \"150\": \"/images/logo.png\"\r\n   *    }\r\n   * Platforms should override this method if the manifest icons use a different format.\r\n   */\r\n  self.getManifestIcons = function (manifest) {\r\n    return Object.keys(manifest.icons || {}).map(function (size) { return manifest.icons[size]; });\r\n  };\r\n  \r\n  /**\r\n   * Receives the size (e.g. '50x50') of an icon and returns the corresponding icon element \r\n   * from the manifest or undefined if not found. The method assumes that all icons \r\n   * are square and defined as properties of an 'icons' member, for example:\r\n   *   \"icons\": {\r\n   *       \"30\": \"/images/smalllogo.png\",\r\n   *       \"50\": \"/images/storelogo.png\",\r\n   *       \"150\": \"/images/logo.png\"\r\n   *    }\r\n   * Platforms should override this method if the manifest icons use a different format.\r\n   */\r\n  self.getManifestIcon = function (manifest, size) {\r\n    // assumes icons are square\r\n    var dimensions = size.toLowerCase().split('x');    \r\n    return manifest.icons && manifest.icons[dimensions[0]];\r\n  };\r\n\r\n  /**\r\n   * Adds an icon file with the specified size (e.g. '50x50') to the manifest. The method\r\n   * assumes that all icons are square and defined as properties of an 'icons' member, for example:\r\n   *   \"icons\": {\r\n   *       \"30\": \"/images/smalllogo.png\",\r\n   *       \"50\": \"/images/storelogo.png\",\r\n   *       \"150\": \"/images/logo.png\"\r\n   *    }\r\n   * Platforms should override this method if the manifest icons use a different format.\r\n   */\r\n  self.addManifestIcon = function (manifest, fileName, size) {\r\n    if (!manifest.icons) {\r\n      manifest.icons = {};\r\n    }\r\n    \r\n    // assumes icons are square\r\n    var dimensions = size.toLowerCase().split('x');    \r\n    manifest.icons[dimensions[0]] = fileName;\r\n  };\r\n\r\n  /**\r\n   * Downloads the platform icons to the generated app's folder. \r\n   */\r\n  self.downloadIcons = function (manifest, baseUrl, imagesDir, callback) {\r\n    self.debug('Downloading the ' + self.id + ' icons...');\r\n    \r\n    // download the icons specified in the manifest\r\n    var iconList = manifest.icons;\r\n    return Q.resolve().then(function () {\r\n      if (iconList) {\r\n        var icons = self.getManifestIcons(manifest);\r\n        \r\n        var downloadTasks = icons.map(function (icon) {\r\n          var iconPath = icon.url || icon;\r\n          var iconUrl = url.resolve(baseUrl, iconPath);\r\n          var pathname = icon.fileName || url.parse(iconUrl).pathname; \r\n          var iconFilePath = path.join(imagesDir, pathname);\r\n          return iconTools.getIcon(iconUrl, iconFilePath);\r\n        });\r\n        \r\n        return Q.allSettled(downloadTasks).then(function (results) {\r\n          results.forEach(function (result) {\r\n            if (result.state === 'rejected') {\r\n              self.warn('Error downloading an icon file. ' + result.reason.message);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    })\r\n    // copy default platform icons to replace any missing icons\r\n    .then(function () {\r\n      var defaultImagesDir = path.join(self.baseDir, 'assets', 'images');\r\n      return fileTools.syncFiles(defaultImagesDir, imagesDir, {\r\n        // filter out default images that do not need to be moved over\r\n        filter: function (file) {\r\n          // determine the icon dimensions assuming a convention where \r\n          // the file name specifies the icon's size (e.g. '50x50.png')\r\n          var size = path.basename(file, path.extname(file));\r\n          return !self.getManifestIcon(manifest, size);\r\n        }\r\n      }).then(function (files) {        \r\n        files.forEach(function (file) {\r\n          // make path relative to imagesDir\r\n          var filePath = path.relative(imagesDir, file);\r\n          \r\n          // convention is for file name to specify the icon's size\r\n          var size = path.basename(file, path.extname(file));\r\n          self.addManifestIcon(manifest, filePath, size);\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        if (err.code !== 'ENOENT') {\r\n          return Q.reject(err);\r\n        }\r\n        \r\n        self.debug('No default icons were found to copy for the \\'' + self.id + '\\' platform.');\r\n      });\r\n    })\r\n    .nodeify(callback);\r\n  };\r\n\r\n  /**\r\n  * Copies the documentation to the generated app's folder. All documents must be placed in \r\n  * the 'docs' folder of the platform. \r\n  */\r\n  self.copyDocumentation = function (targetPath, platform, callback) {\r\n\r\n    if (arguments.length > 1) {\r\n      if (utils.isFunction(platform)) {\r\n        callback = platform;\r\n        platform = '';\r\n      }\r\n    }\r\n    \r\n    var sourcePath = path.join(self.baseDir, 'docs', platform || '');\r\n\r\n    self.info('Copying documentation from \\'' + sourcePath + '\\' to \\'' + targetPath + '\\'...');\r\n\r\n    return fileTools.copyFolder(sourcePath, targetPath).catch (function (err) {\r\n      // failure to copy the documentation is not considered fatal, so catch the error and log as a warning\r\n      self.warn('Failed to copy the documentation for the \\'' + platform + '\\' Cordova platform. ' + err.getMessage());\r\n    })\r\n    .nodeify(callback);\r\n  };\r\n\r\n  /**\r\n  * Writes 'telemetry' information to the generated app's folder, including generation tool version, \r\n  * platform package version, generated app URL, and generation date.\r\n  */\r\n  self.writeGenerationInfo = function (manifestInfo, targetPath, callback) {\r\n\r\n    var appModule = packageTools.getPackageInformation();\r\n    if (!appModule) {    \r\n      self.warn('Failed to retrieve the metadata for the app generation tool.');\r\n      appModule = { version: 'Unknown' };\r\n    }\r\n\r\n    var platformModule = packageTools.getPackageInformation(self.packageName);\r\n    if (!platformModule) {\r\n      self.warn('Failed to retrieve the metadata for the \\'' + self.id + '\\' platform package.');\r\n      platformModule = { version: 'Unknown' };\r\n    }\r\n\r\n    var timestamp = manifestInfo.timestamp || new Date().toISOString().replace(/T/, ' ').replace(/\\.[0-9]+/, ' ');\r\n\r\n    var generationInfo = {\r\n      'generationTool': appModule.name,\r\n      'generationToolVersion': appModule.version,\r\n      'platformId' : self.id,\r\n      'platformPackage' : self.packageName,\r\n      'platformVersion': platformModule.version,\r\n      'generatedFrom': manifestInfo.generatedFrom || 'API',\r\n      'generationDate': timestamp,\r\n    };\r\n\r\n    if (manifestInfo.generatedUrl) {\r\n      generationInfo['generatedURL'] = manifestInfo.generatedUrl;\r\n    }\r\n\r\n    var filePath = path.join(targetPath, 'generationInfo.json');\r\n    self.info('Writing the generation information for the \\'' + self.name + '\\' platform to \\'' + filePath + '\\'...');\r\n    return Q.nfcall(fs.writeFile, filePath, JSON.stringify(generationInfo, null, 4))\r\n            .nodeify(callback);\r\n  };\r\n\r\n  /**\r\n   * Outputs a debug message to the log.\r\n   */\r\n  self.debug = function (message, source) {\r\n    self.log.debug(message, source || self.id);\r\n  };\r\n\r\n  /**\r\n   * Outputs an informational message to the log.\r\n   */\r\n  self.info = function (message, source) {\r\n    self.log.info(message, source || self.id);\r\n  };\r\n\r\n  /**\r\n   * Outputs a warning message to the log.\r\n   */\r\n  self.warn = function (message, source) {\r\n    self.log.warn(message, source || self.id);\r\n  };\r\n\r\n  /**\r\n   * Outputs an informational message to the log.\r\n   */\r\n  self.error = function (message, source) {\r\n    self.log.error(message, source || self.id);\r\n  };\r\n\r\n  /**\r\n   * Outputs a message to the log regardless of the configured logging level.\r\n   */\r\n  self.write = function (message, source) {\r\n    self.log.write(message, source || self.id);\r\n  };\r\n}\r\n\r\nmodule.exports = PlatformBase;\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/fileTools.js":"'use strict';\n\nvar fs = require('fs'),\n    path = require('path');\n\nvar _mkdirp = require('mkdirp'),\n    ncp = require('ncp'), \n    Q = require('q');\n    \nvar log = require('./log'),\n    utils = require('./utils');\n\nvar stat = Q.nfbind(fs.stat);\n\nfunction readFile (source, callback) {\n  return Q.nfcall(fs.readFile, source, 'utf8')\n          .nodeify(callback);\n}\n\nfunction copyFile (source, target, callback) {\n\n  var deferred = Q.defer();\n\n  var rd = fs.createReadStream(source);\n  rd.on('error', function (err) {\n    deferred.reject(err);\n  });\n\n  var wr = fs.createWriteStream(target);\n  wr.on('error', function (err) {\n    deferred.reject(err);\n  });\n\n  wr.on('close', function () {\n    deferred.resolve();\n  });\n\n  rd.pipe(wr);\n\n  return deferred.promise.nodeify(callback);\n}\n\nfunction copyFolder (source, target, options, callback) {\n\n  if (arguments.length === 3) {\n    if (utils.isFunction(options)) {\n      callback = options;\n      options = {};      \n    }\n  }\n  \n  return Q.nfcall(ncp, source, target, options || {}).catch(function (err) {\n    // flatten errors, otherwise it breaks things downstream\n    // see https://github.com/AvianFlu/ncp/issues/52\n    if (Array.isArray(err)) {\n      var msg = err.reduce(function (previous, current) {\n        return previous += (previous.length ? '\\n' : '') + current.message;\n      }, '');\n      \n      err = new Error(msg);              \n    }\n    \n    return Q.reject(err);\n  })\n  .nodeify(callback);\n}\n\nfunction replaceFileContent (source, replacementFunc, callback) {\n  return Q.nfcall(fs.readFile, source, 'utf8').then(function (data) {\n    var result = replacementFunc(data);\n    return Q.nfcall(fs.writeFile, source, result, 'utf8');\n  })\n  .nodeify(callback);\n}\n\nfunction mkdirp (filePath, callback) {\n  \n  // ensure filePath points to a valid drive\n  var fullPath = path.resolve(filePath);\n  var rootPath = path.parse(fullPath).root;\n  \n  // create directory recursively\n  return stat(rootPath).then(function () {\n    return Q.nfcall(_mkdirp, filePath);\n  })\n  .nodeify(callback);\n}\n\nfunction createShortcut (srcpath, dstpath, callback) {\n  return Q.nfcall(fs.symlink, srcpath, dstpath, 'junction')\n          .nodeify(callback);\n}\n\nfunction searchFile (dir, fileName, callback) {\n  var results = [];\n  fs.readdir(dir, function (err, list) {\n    if (err) {\n      return callback(err);\n    }\n\n    var pending = list.length;\n    if (!pending) {\n      return callback(null, results);\n    }\n\n    list.forEach(function (file) {\n      file = path.resolve(dir, file);\n      fs.stat(file, function (err, stat) {\n        if (stat && stat.isDirectory()) {\n          searchFile(file, fileName, function (err, res) {\n            results = results.concat(res);\n            if (!--pending){\n              callback(null, results);\n            }\n          });\n        } \n        else {\n          if (path.basename(file) === fileName) {\n            results.push(file);\n          }\n\n          if (!--pending) {\n            callback(null, results);\n          }\n        }\n      });\n    });\n  });\n}\n\n// Copies the 'source' file to 'target' if it's missing after creating the  \n// required directory structure.\nfunction syncFile (source, target, callback) {\n  \n  // check target file\n  return stat(target).then(function (info) {\n    // verify that target is a file and not a directory\n    if (info.isDirectory()) {\n      return Q.reject(new Error('Cannot synchronize file \\'' + source + '\\'. There is already a directory in the target with the same name.'));\n    }\n    \n    // skip target if it already exists\n    return;\n  })\n  .catch(function (err) {\n    // return failure for anything other than 'not found' \n    if (err.code !== 'ENOENT') {\n      return Q.reject(err);\n    }\n\n    // copy source to target\n    var targetDir = path.dirname(target);\n    return stat(targetDir).catch(function (err) {\n      // return failure for anything other than 'not found' \n      if (err.code !== 'ENOENT') {\n        return Q.reject(err);\n      }\n\n      // create target directory            \n      return mkdirp(targetDir).then(function () {\n        log.debug('Created target directory at \\'' + targetDir + '\\'.');              \n      })\n      .catch(function (err) {\n        // ignore error if target was already created by a different \"thread\"\n        if (err.code !== 'EEXIST') {\n          return Q.reject(err);\n        }\n      })\n      .then(function () {\n        return stat(targetDir);\n      });\n    })\n    .then(function () {\n      return copyFile(source, target).then(function () {\n        log.debug('Copied file \\'' + source + '\\' to \\'' + target + '\\'.');\n        return target;\n      });\n    });\n  })\n  .nodeify(callback);\n}\n\n// Copies all missing files and directories in 'source' to 'target'.\n// Only checks that a file exists by comparing the file names, not \n// that the contents of the source and target files the same. \n// Returns an array with the list of files that were copied.\n//\n// NOTE: copyFiles in this module already provides similar functionality,\n// but it's based on the 'ncp' package and does not provide the list of\n// copied files.\nfunction syncFiles (source, target, options, callback) {\n  \n  if (arguments.length === 3 && utils.isFunction(options)) {\n    callback = options;\n    options = {};  \n  }\n  \n  // read the contents of the source directory\n  return Q.nfcall(fs.readdir, source).then(function (files) {\n  \n    // process each file and folder\n    var tasks = files.map(function (fileOrDir) {\n      var sourceFile = path.join(source, fileOrDir);\n      return stat(sourceFile).then(function (info) {\n        \n        // if fileOrDir is a directory, synchronize it\n        if (info.isDirectory()) {\n          return syncFiles(sourceFile, path.join(target, fileOrDir), options);\n        }\n        \n        // check to see if file should be skipped \n        if (options.filter) {\n          var check = options.filter(fileOrDir);\n          if (check === false) {\n            return;\n          }\n        }\n        \n        // synchronize a single file        \n        var targetFile = path.join(target, fileOrDir);\n        return syncFile(sourceFile, targetFile);\n      });\n    });\n  \n    // wait for all pending tasks to complete\n    return Q.all(tasks).then(function (values) {\n      \n      // build a list of the files that were copied\n      return values.reduce(function (list, value) {\n        if (value) {\n          if (Array.isArray(value)) {\n            list.push.apply(list, value);\n          }\n          else {\n            list.push(value);            \n          }\n        }\n        \n        return list;\n      }, []);\n    });\n  })\n  .catch(function (err) {\n    if (err.code !== 'ENOTDIR') {\n      return Q.reject(err);\n    }\n    \n    // specified source is a file not a directory\n    var sourceFile = path.basename(source);\n    var targetFile = path.basename(target);\n    \n    // build target file path assuming target is a directory\n    // unless target already includes the file name\n    if (sourceFile !== targetFile) {\n      target = path.join(target, sourceFile);\n    }\n    \n    // synchronize the file\n    return syncFile(source, target).then(function (file) {\n      return file ? [file] : [];\n    });\n  })\n  .nodeify(callback);\n}\n\nmodule.exports = {\n  readFile: readFile,\n  copyFile: copyFile,\n  copyFolder: copyFolder,\n  mkdirp: mkdirp,\n  createShortcut: createShortcut,\n  replaceFileContent: replaceFileContent,\n  searchFile: searchFile,\n  syncFiles: syncFiles\n};\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/log.js":"'use strict';\n\nvar ansi = require('ansi'),\n    path = require('path');\n\n// When the source for manifoldjs-lib is a GitHub repository, npm installs \n// separate copies of manifoldjs-lib for each platform. The singleton ensures \n// that all access the global instance; otherwise, each one gets a separate \n// instance of the logger.\nvar log = global.manifoldjs_logger,\n    cursor = ansi(process.stdout),\n    utils = require('./utils');\n\nvar colorMap = {\n  'debug': 'green',\n  'info':  'brightGreen',\n  'warn':  'yellow',\n  'error': 'brightRed',\n  'default': 'brightGreen'\n};\n\nfunction getApplicationName (appPath) {\n    \n  try {\n    if (!appPath) {\n      appPath = path.dirname(utils.getRootPackagePath());\n    }\n    \n    var mainModule = path.join(appPath, 'package.json');\n    return require(mainModule).name;\n  }\n  catch (err) {\n    if (err.code !== 'MODULE_NOT_FOUND') {\n      throw err;\n    }\n    \n    var next = path.resolve(appPath, '..');\n    if (appPath !== next) {\n      return getApplicationName(next);   \n    }    \n  }\n} \n\nif (!log) {\n  log = require('loglevel');\n  \n  var maxLenSeverity = 5;\n  var maxLenSource = 12;\n\n  var originalFactory = log.methodFactory;\n  log.methodFactory = function (methodName, logLevel, loggerName) {\n    var rawMethod = originalFactory(methodName, logLevel, loggerName);\n    \n    return function (message, source, severity) {\n      \n      severity = severity || methodName;\n      var color = colorMap[severity] || colorMap['default'];\n      cursor[color]();\n\n      message = (message || '').replace(/\\n/g, '\\n' + new Array(maxLenSeverity + maxLenSource + 6).join(' '));\n      \n      if (methodName !== 'write') {\n        source = source || loggerName || getApplicationName() || 'Unknown';\n        rawMethod(\n          '[' + severity + new Array(Math.max(maxLenSeverity - severity.length + 1, 0)).join(' ') + '] ' +\n          source + new Array(Math.max(maxLenSource - source.length + 1, 0)).join(' ') + ': ' +\n          message);        \n      }\n      else {\n        rawMethod(message);\n      }\n       \n      cursor.reset();  \n    };\n  };\n  \n  log.write = log.methodFactory('write', log.levels.INFO, '');\n  \n  // call setLevel to apply the changes\n  log.setLevel(log.getLevel());\n  \n  global.manifoldjs_logger = log;\n}\n\nmodule.exports = log;\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/utils.js":"'use strict';\r\n\r\nvar os = require('os'),\r\n  url = require('url'),\r\n  path = require('path');\r\n\r\nfunction parseJSON (data) {\r\n  try {\r\n    var jsonString = data.toString().replace(/^\\uFEFF/, '');\r\n    return JSON.parse(jsonString);\r\n  } \r\n  catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// Extracted from: http://stackoverflow.com/questions/5999998/how-can-i-check-if-a-javascript-variable-is-function-type\r\nfunction isFunction (data) {\r\n  var getType = {};\r\n  return data && getType.toString.call(data) === '[object Function]';\r\n}\r\n\r\nfunction isString (data) {\r\n  return typeof data === 'string';\r\n}\r\n\r\nfunction capitalize (string) {\r\n  return (isString(string) && string.length > 0 ? string.charAt(0).toUpperCase() + string.slice(1) : '');\r\n}\r\n\r\nfunction newGuid () {\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n\r\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n    s4() + '-' + s4() + s4() + s4();\r\n}\r\n\r\n// This function sanitizes the name to only allow the following: ([A-Za-z][A-Za-z0-9]*)(\\.[A-Za-z][A-Za-z0-9]*)*\r\nfunction sanitizeName (name) {\r\n  var sanitizedName = name;\r\n  \r\n  // Remove all invalid characters\r\n  sanitizedName = sanitizedName.replace(/[^A-Za-z0-9\\.]/g, '');\r\n\r\n  var currentLength;\r\n  do {\r\n    currentLength = sanitizedName.length;\r\n    \r\n    // If the name starts with a number, remove the number \r\n    sanitizedName = sanitizedName.replace(/^[0-9]/, '');\r\n    \r\n    // If the name starts with a dot, remove the dot\r\n    sanitizedName = sanitizedName.replace(/^\\./, '');\r\n    \r\n    // If there is a number right after a dot, remove the number\r\n    sanitizedName = sanitizedName.replace(/\\.[0-9]/g, '.');\r\n    \r\n    // If there are two consecutive dots, remove one dot\r\n    sanitizedName = sanitizedName.replace(/\\.\\./g, '.');\r\n    \r\n    // if the name ends with a dot, remove the dot\r\n    sanitizedName = sanitizedName.replace(/\\.$/, '');\r\n  }\r\n  while (currentLength > sanitizedName.length);\r\n\r\n  if (sanitizedName.length === 0) {\r\n    sanitizedName = 'myManifoldJSApp';\r\n  }\r\n\r\n  return sanitizedName;\r\n}\r\n\r\n// Function to remove duplicates from any array\r\nfunction removeDupesInPlace (arr, comparator) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    for (var j = arr.length - 1; j > i; j--) {\r\n      if (comparator(arr[j], arr[i])) {\r\n        arr.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n  \r\n  return arr;\r\n}\r\n\r\nvar urlRegex = /^(?:[a-z](?:[-a-z0-9\\+\\.])*:(?:\\/\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:])*@)?(?:\\[(?:(?:(?:[0-9a-f]{1,4:){6(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|::(?:[0-9a-f]{1,4:){5(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:[0-9a-f]{1,4)?::(?:[0-9a-f]{1,4:){4(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:[0-9a-f]{1,4:[0-9a-f]{1,4)?::(?:[0-9a-f]{1,4:){3(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:(?:[0-9a-f]{1,4:){0,2[0-9a-f]{1,4)?::(?:[0-9a-f]{1,4:){2(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:(?:[0-9a-f]{1,4:){0,3[0-9a-f]{1,4)?::[0-9a-f]{1,4:(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:(?:[0-9a-f]{1,4:){0,4[0-9a-f]{1,4)?::(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:(?:[0-9a-f]{1,4:){0,5[0-9a-f]{1,4)?::[0-9a-f]{1,4|(?:(?:[0-9a-f]{1,4:){0,6[0-9a-f]{1,4)?::)|v[0-9a-f]+[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:]+)\\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=@])*)(?::[0-9]*)?(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))*)*|\\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))*)*)?|(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@])))(?:\\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@])|[\\uE000-\\uF8FF\\uF0000-\\uFFFFD|\\u100000-\\u10FFFD\\/\\?])*)?(?:\\#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@])|[\\/\\?])*)?|(?:\\/\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:])*@)?(?:\\[(?:(?:(?:[0-9a-f]{1,4:){6(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|::(?:[0-9a-f]{1,4:){5(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:[0-9a-f]{1,4)?::(?:[0-9a-f]{1,4:){4(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:[0-9a-f]{1,4:[0-9a-f]{1,4)?::(?:[0-9a-f]{1,4:){3(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:(?:[0-9a-f]{1,4:){0,2[0-9a-f]{1,4)?::(?:[0-9a-f]{1,4:){2(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:(?:[0-9a-f]{1,4:){0,3[0-9a-f]{1,4)?::[0-9a-f]{1,4:(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:(?:[0-9a-f]{1,4:){0,4[0-9a-f]{1,4)?::(?:[0-9a-f]{1,4:[0-9a-f]{1,4|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3)|(?:(?:[0-9a-f]{1,4:){0,5[0-9a-f]{1,4)?::[0-9a-f]{1,4|(?:(?:[0-9a-f]{1,4:){0,6[0-9a-f]{1,4)?::)|v[0-9a-f]+[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:]+)\\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=@])*)(?::[0-9]*)?(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))*)*|\\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))*)*)?|(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=@])+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@])))(?:\\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@])|[\\uE000-\\uF8FF\\uF0000-\\uFFFFD|\\u100000-\\u10FFFD\\/\\?])*)?(?:\\#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\uA0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\u10000-\\u1FFFD\\u20000-\\u2FFFD\\u30000-\\u3FFFD\\u40000-\\u4FFFD\\u50000-\\u5FFFD\\u60000-\\u6FFFD\\u70000-\\u7FFFD\\u80000-\\u8FFFD\\u90000-\\u9FFFD\\uA0000-\\uAFFFD\\uB0000-\\uBFFFD\\uC0000-\\uCFFFD\\uD0000-\\uDFFFD\\uE1000-\\uEFFFD!\\$&'\\(\\)\\*\\+,;=:@])|[\\/\\?])*)?)$/i;\r\nfunction isURL (data) {\r\n  return (typeof data === 'string' && urlRegex.test(data));\r\n}\r\n\r\nfunction getDefaultShortName (siteUrl) {\r\n  var shortName = '';\r\n  url.parse(siteUrl)\r\n    .hostname\r\n    .split('.')\r\n    .map(function (segment) {\r\n      segment.split('-').map(function (fraction) {\r\n        shortName = shortName + capitalize(fraction);\r\n      });\r\n    });\r\n\r\n  return shortName;\r\n}\r\n\r\n// Handle Node hosted in IIS\r\nfunction getRootPackagePath() {\r\n  var fileName = path.basename(require.main.filename);\r\n\r\n  if (fileName === 'interceptor.js') {\r\n    if (require.main.children.length > 0) {\r\n      return require.main.children[0].filename;\r\n    }\r\n  }\r\n\r\n  return require.main.filename;\r\n}\r\n\r\nmodule.exports = {\r\n  parseJSON: parseJSON,\r\n  isFunction: isFunction,\r\n  isString: isString,\r\n  capitalize: capitalize,\r\n  newGuid: newGuid,\r\n  sanitizeName: sanitizeName,\r\n  removeDupesInPlace: removeDupesInPlace,\r\n  isURL: isURL,\r\n  isWindows: /^win/.test(os.platform()),\r\n  getDefaultShortName: getDefaultShortName,\r\n  getRootPackagePath: getRootPackagePath\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/iconTools.js":"'use strict';\r\n\r\nvar path = require('path');\r\n\r\nvar Q = require('q');\r\n\r\nvar fileTools = require('./fileTools'),\r\n\t\tdownload = require('./download'),\r\n\t\tlog = require('./log');\r\n\r\nfunction getIcon(iconUrl, iconFilePath, callback) {\r\n\r\n\tvar iconFolder = path.dirname(iconFilePath);\r\n\r\n\tlog.debug('Downloading icon file from \\'' + iconUrl + '\\' to \\'' + iconFilePath + '\\'...');\r\n  \r\n\treturn fileTools.mkdirp(iconFolder).then(function () {\r\n    return download(iconUrl, iconFilePath).then(function (response) {\r\n      if (response.statusCode === 200 && !response.contentType.match(/image/)) {\r\n        // If not an image, return an error\r\n        return Q.reject(new Error('Downloaded file  \\'' + iconUrl + '\\' does not appear to be an image. The content type of the response was \\'' + response.contentType + '\\'.'));\r\n      }\r\n      \r\n      return iconFilePath;\r\n    });\r\n  })\r\n  .nodeify(callback);\r\n}\r\n\r\nfunction copyDefaultIcon(manifest, platformId, iconSize, source, targetPath, callback) {\r\n\t\r\n\t// platform already contains an icon with this size - skip\r\n\tif (manifest.icons && manifest.icons[iconSize]) {\r\n\t\treturn Q.resolve().nodeify(callback);\r\n\t}\r\n\r\n\tlog.info('Copying the default icon for the \\'' + platformId + '\\' platform...');\r\n\r\n\tvar iconFilename = path.basename(source);\r\n\tvar target = path.join(targetPath, iconFilename);\r\n\r\n\treturn fileTools.copyFile(source, target).then(function () {\r\n    manifest.icons = manifest.icons || {};\r\n    manifest.icons[iconSize] = iconFilename;\r\n    return Q.resolve(targetPath);\r\n  })\r\n  .nodeify(callback);\r\n}\r\n\r\nmodule.exports = {\r\n\tgetIcon: getIcon,\r\n\tcopyDefaultIcon: copyDefaultIcon\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/download.js":"'use strict';\r\n\r\nvar fs = require('fs'),\r\n    http = require('http'),\r\n    https = require('https'),\r\n    url = require('url'),\r\n    path = require('path');\r\n    \r\nvar Q = require('q');\r\n\r\nfunction download (inputUri, outputFilePath, callback) {\r\n\r\n  var uri = url.parse(inputUri);\r\n\r\n  if (inputUri.indexOf('http://') !== 0 && inputUri.indexOf('https://') !== 0) {\r\n    // this is to detect scenarios like localhost:8080 where localhost is\r\n    // treated as protocol even if it's not.\r\n    if (inputUri.indexOf(uri.protocol + '//') !== 0) {\r\n      inputUri = 'http://' + inputUri;\r\n      uri = url.parse(inputUri);\r\n    }\r\n  }\r\n\r\n  if (!(uri.protocol === 'http:' || uri.protocol === 'https:')) {\r\n    return Q.reject(new Error('Invalid protocol. Only http & https are supported.')).nodeify(callback);\r\n  }\r\n\r\n  var downloadDir = path.dirname(outputFilePath);\r\n  if (!fs.existsSync(downloadDir)) {\r\n    return Q.reject(new Error('Invalid download directory \\'' + downloadDir + '\\'.')).nodeify(callback);\r\n  }\r\n\r\n  var lastModified;\r\n\r\n  if (fs.existsSync(outputFilePath)) {\r\n    var stats = fs.lstatSync(outputFilePath);\r\n    lastModified = new Date(stats.mtime);\r\n  }\r\n\r\n  var options = {\r\n    host: uri.hostname,\r\n    port: uri.port || (uri.protocol === 'https:' ? 443 : 80),\r\n    path: uri.path,\r\n    agent: false\r\n  };\r\n\r\n  if (lastModified) {\r\n    options.headers = {\r\n      'if-modified-since': lastModified.toUTCString()\r\n    };\r\n  }\r\n\r\n  var protocol = uri.protocol === 'https:' ? https : http;\r\n\r\n  var deferred = Q.defer();\r\n  protocol.get(options, function (res) {\r\n    \r\n    // If Moved Permanently or Found, redirect to new URL\r\n    if ([301, 302].indexOf(res.statusCode) > -1) {\r\n      return download(res.headers.location, outputFilePath)\r\n        .then(function (result) { deferred.resolve(result); })\r\n        .catch(function (err) { deferred.reject(err); });\r\n    }\r\n    \r\n    // If not OK or Not Modified, throw error\r\n    if ([200, 304].indexOf(res.statusCode) === -1) {\r\n      var err = new Error('Error downloading \\'' + inputUri + '\\'. Response was \\'' + res.statusCode + ' - ' + res.statusMessage + '\\'.');\r\n      err.statusCode = res.statusCode;\r\n      err.statusMessage = res.statusMessage;\r\n      return deferred.reject(err);\r\n    }\r\n\r\n    // If Not Modified, ignore\r\n    if (res.statusCode === 304) {\r\n      return deferred.resolve({ 'path': outputFilePath, 'statusCode': res.statusCode, 'statusMessage': res.statusMessage, 'contentType': res.headers['content-type'] });\r\n    }\r\n\r\n    // Else save\r\n    res.pipe(fs.createWriteStream(outputFilePath))\r\n      .on('close', function () {\r\n        var lastAccessed = new Date();\r\n        var lastModified = res.headers['last-modified'] ? new Date(res.headers['last-modified']) : lastAccessed;\r\n      \r\n        // update the last modified time of the file to match the response header\r\n        fs.utimes(outputFilePath, lastAccessed, lastModified, function (err) {\r\n          if (err) {\r\n            return deferred.reject(err);\r\n          }\r\n\r\n          return deferred.resolve({ 'path': outputFilePath, 'statusCode': res.statusCode, 'statusMessage': res.statusMessage, 'contentType': res.headers['content-type']  });\r\n        });\r\n      });\r\n  }).on('error', function (err) {\r\n    return deferred.reject(err);\r\n  });\r\n\r\n  return deferred.promise.nodeify(callback);\r\n}\r\n\r\nmodule.exports = download;\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/index.js":"'use strict';\r\n\r\nvar manifestConverter = require('./manifestConverter'), \r\n    manifestLoader = require('./manifestLoader'),\r\n    manifestValidator = require('./manifestValidator');\r\n\r\nmodule.exports = {\r\n  getManifestFromSite:          manifestLoader.getManifestFromSite,\r\n  getManifestFromFile:          manifestLoader.getManifestFromFile,\r\n  writeToFile:                  manifestLoader.writeToFile,\r\n  fetchManifestUrlFromSite:     manifestLoader.fetchManifestUrlFromSite,\r\n  downloadManifestFromUrl:      manifestLoader.downloadManifestFromUrl,\r\n  listAvailableManifestFormats: manifestLoader.listAvailableManifestFormats,\r\n  convertTo:                    manifestConverter.convertTo,\r\n  validateManifest:             manifestValidator.validateManifest,\r\n  loadValidationRules:          manifestValidator.loadValidationRules,\r\n  runValidationRules:           manifestValidator.runValidationRules,\r\n  imageValidation:              manifestValidator.imageValidation,\r\n  imageGroupValidation:         manifestValidator.imageGroupValidation,\r\n  validateAndNormalizeStartUrl: manifestValidator.validateAndNormalizeStartUrl,\r\n  applyValidationRules:         manifestValidator.applyValidationRules  \r\n};\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/manifestConverter.js":"'use strict';\r\n\r\nvar constants = require('../constants'),\r\n    transformations = require('./manifestTransformations'),\r\n    utils = require('../utils');\r\n\r\nfunction convertTo(manifestInfo, outputFormat, callback) {\r\n\r\n  if (arguments.length < 3) {\r\n    if (utils.isFunction(outputFormat)) {\r\n      callback = outputFormat;\r\n      outputFormat = undefined;      \r\n    }\r\n  }\r\n  \r\n  if (!manifestInfo || !manifestInfo.content) {\r\n    return callback(new Error('Manifest content is empty or not initialized.'));\r\n  }\r\n\r\n  var inputFormat = constants.BASE_MANIFEST_FORMAT;\r\n  if (manifestInfo.format && utils.isString(manifestInfo.format)) {\r\n    inputFormat = manifestInfo.format.toLowerCase();\r\n  }\r\n\r\n  if (outputFormat && utils.isString(outputFormat)) {\r\n    outputFormat = outputFormat.toLowerCase();\r\n  } else {\r\n    outputFormat = constants.BASE_MANIFEST_FORMAT;\r\n  }\r\n\r\n  if (inputFormat === outputFormat) {\r\n    if (!manifestInfo.format) {\r\n      manifestInfo.format = outputFormat;\r\n    }\r\n    return callback(undefined, manifestInfo);\r\n  }\r\n\r\n  var inputTransformation = transformations[inputFormat];\r\n  var outputTransformation = transformations[outputFormat];\r\n\r\n  if (!inputTransformation || !outputTransformation) {\r\n    return callback(new Error('Manifest format is not recognized.'));\r\n  }\r\n\r\n  inputTransformation.convertToBase(manifestInfo, function (err, resultManifestInfo) {\r\n    if (err) {\r\n      return callback(err, resultManifestInfo);\r\n    }\r\n\r\n    outputTransformation.convertFromBase(resultManifestInfo, callback);\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  convertTo: convertTo\r\n};","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/constants.js":"'use strict';\r\n\r\nvar validationConstants = {\r\n  levels: {\r\n    error: 'error',\r\n    warning: 'warning',\r\n    suggestion: 'suggestion'\r\n  },\r\n  codes: {\r\n    requiredValue: 'required-value',\r\n    invalidValue: 'invalid-value',\r\n    missingImageGroup: 'missing-image-group',\r\n    missingImage: 'missing-image',\r\n    missingImageOnsite: 'missing-image-onsite',\r\n    requiredAbsoluteUrl: 'requiredAbsoluteUrl',\r\n    deprecatedMember: 'deprecatedMember'\r\n  },\r\n  manifestMembers: {\r\n    lang: 'lang',\r\n    name: 'name',\r\n    short_name: 'short_name',\r\n    scope: 'scope',\r\n    icons: 'icons',\r\n    display: 'display',\r\n    orientation: 'orientation',\r\n    start_url: 'start_url',\r\n    theme_color: 'theme_color',\r\n    related_applications: 'related_applications',\r\n    prefer_related_applications: 'prefer_related_applications',\r\n    description: 'description',\r\n    background_color: 'background_color',\r\n    dir: 'dir',\r\n    mjs_access_whitelist: 'mjs_access_whitelist',\r\n    mjs_api_access: 'mjs_api_acces',\r\n    mjs_extended_scope: 'mjs_extended_scope'\r\n  },\r\n  platforms: {\r\n    all: 'general'\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  BASE_MANIFEST_FORMAT: 'w3c',\r\n  CHROME_MANIFEST_FORMAT: 'chromeos',\r\n  FIREFOX_MANIFEST_FORMAT: 'firefox',\r\n  WINDOWS10_MANIFEST_FORMAT: 'windows10',\r\n  EDGE_EXTENSION_MANIFEST_FORMAT: 'edgeextension',\r\n  validation: validationConstants\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/manifestTransformations.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar transformationsPath = path.join(__dirname, 'transformations');\n\nvar modules = {};\n\nfs.readdirSync(transformationsPath).forEach(function(file) {\n  var moduleName = path.basename(file, path.extname(file));\n  modules[moduleName] = require(path.join(transformationsPath, file));\n});\n\nmodule.exports = modules;\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/transformations/chromeos.js":"'use strict';\n\nvar constants = require('../../constants'),\n    utils = require('../../utils');\n\nfunction convertToBase(manifestInfo, callback) {\n  if (!manifestInfo || !manifestInfo.content) {\n    return callback(new Error('Manifest content is empty or not initialized.'));\n  }\n  \n  var originalManifest = manifestInfo.content;\n\n  var manifest = {\n    start_url: originalManifest.app.launch.web_url,\n    icons: []\n  };\n\n  if (originalManifest.default_locale) {\n    manifest.lang = originalManifest.default_locale;\n  }\n\n  if (originalManifest.name) {\n    manifest.name = originalManifest.name;\n  }\n\n  if (originalManifest.short_name) {\n    manifest.name = originalManifest.short_name;\n  }\n    \n  // Extract icons\n  for (var size in originalManifest.icons) {\n    manifest.icons.push({\n      sizes: size + 'x' + size,\n      src: originalManifest.icons[size]\n    });\n  }\n\n  // Extract app URLs\n  var appUrls = originalManifest.app.urls;\n  if (appUrls && Array.isArray(appUrls)) {\n    appUrls = utils.removeDupesInPlace(appUrls, function (a, b) {\n      return a === b;\n    }).map(function (url) {\n      return url.trim().replace(/\\/$/, '/*');\n    });\n  }\n\n  if (appUrls) {\n    manifest.mjs_extended_scope = appUrls;\n  }\n\n  if (originalManifest.permissions) {\n    var allPermissions = originalManifest.permissions.join(', ');\n    manifest.mjs_api_access = [{ 'match': originalManifest.app.launch.web_url.replace(/\\/$/, '/*'), 'platform': 'chrome', 'access': allPermissions }];\n\n    if (appUrls && Array.isArray(appUrls)) {\n      appUrls.forEach(function (url) {\n        manifest.mjs_api_access.push({ 'match': url, 'platform': 'chrome', 'access': allPermissions });\n      });\n    }\n  }\n\n  var convertedManifestInfo = {\n    'content': manifest,\n    'format': constants.BASE_MANIFEST_FORMAT\n  };\n\n  return callback(undefined, convertedManifestInfo);\n}\n\n// see https://developer.chrome.com/webstore/hosted_apps\nvar requiredRootProperties = ['name', 'version', 'manifest_version', 'app'];\n\nvar validRootProperties = ['name', 'description', 'version', 'manifest_version', 'app',\n                           'background_page', 'icons', 'key',\n                           'minimum_chrome_version', 'offline_enabled',\n                           'permissions', 'update_url', 'default_locale'];\n\nvar validAppProperties = ['urls', 'launch'];\nvar validAppLaunchProperties = ['web_url', 'container', 'height', 'width'];\n\nfunction matchFormat(manifestObj) {\n  var lowercasePropName;\n\n  // check required fields\n  for (var i = 0; i < requiredRootProperties.length; i++) {\n    if (!manifestObj.hasOwnProperty(requiredRootProperties[i])) {\n      return false;\n    }\n  }\n\n  if (!manifestObj.app.hasOwnProperty('launch') ||\n    !manifestObj.app.launch.hasOwnProperty('web_url')) {\n    return false;\n  }\n\n  for (var prop in manifestObj) {\n    if (manifestObj.hasOwnProperty(prop)) {\n      lowercasePropName = prop.toLowerCase();\n      if (validRootProperties.indexOf(lowercasePropName) === -1) {\n        return false;\n      }\n    }\n\n    if (lowercasePropName === 'app') {\n      for (var appProp in manifestObj.app) {\n        if (manifestObj.app.hasOwnProperty(appProp)) {\n          if (validAppProperties.indexOf(appProp) === -1) {\n            return false;\n          }\n\n          if (appProp === 'launch') {\n            for (var appLaunchProp in manifestObj.app.launch) {\n              if (manifestObj.app.launch.hasOwnProperty(appLaunchProp)) {\n                if (validAppLaunchProperties.indexOf(appLaunchProp) === -1) {\n                  return false;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  convertToBase: convertToBase,\n  matchFormat: matchFormat\n};\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/transformations/edgeextension.js":"'use strict';\n\nfunction convertToBase (manifestInfo, callback) {\n  if (!manifestInfo || !manifestInfo.content) {\n    return callback(new Error('Manifest content is empty or not initialized.'));\n  }\n\n  return callback(undefined, manifestInfo);\n}\n\nfunction convertFromBase (manifestInfo, callback) {\n  if (!manifestInfo || !manifestInfo.content) {\n    return callback(new Error('Manifest content is empty or not initialized.'));\n  }\n\n  return callback(undefined, manifestInfo);\n}\n\nvar validRootProperties = ['name', 'author', 'version', 'default_locale', 'description', 'manifest_version', 'icons', 'content_security_policy',\n                           'browser_action', 'page_action', 'background', 'commands', 'content_scripts', 'externally_connectable', 'homepage_url',\n                           'addressbar', 'options_page', 'permissions', 'optional_permissions', 'web_accessible_resources', 'minimum_edge_version',\n                           'key', '-ms-preload'];\n\nfunction matchFormat (manifestObj) {\n  var lowercasePropName;\n\n  for (var prop in manifestObj) {\n    if (manifestObj.hasOwnProperty(prop)) {\n      lowercasePropName = prop.toLowerCase();\n      if (validRootProperties.indexOf(lowercasePropName) === -1 && lowercasePropName.indexOf('_') <= 0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  convertToBase: convertToBase,\n  convertFromBase: convertFromBase,\n  matchFormat: matchFormat\n};\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/transformations/firefox.js":"'use strict';\n\n// App manifest must contain the following fields (if publishing to Firefox Marketplace):\n//  - name\n//  - description\n//  - launch_path(for Packaged Apps)\n//  - icons (1 icon of 128x128 required, 1 icon of 512x512 recommended)\n//  - developer\n//  - default_locale (if locales is defined)\n//  - type (for privileged and internal(certified) apps)\n\n// App manifest must contain the following fields (if NOT publishing to Firefox Marketplace):\n//  - name\n//  - description\n//  - icons (1 icon of 128x128 required, 1 icon of 512x512 recommended)\n\nvar c = require('../../constants');\n\nfunction convertToBase(manifestInfo, callback) {\n  if (!manifestInfo || !manifestInfo.content) {\n    return callback(new Error('Manifest content is empty or not initialized.'));\n  }\n\n  var originalManifest = manifestInfo.content;\n  var manifest = {\n    'start_url': originalManifest.launch_path || '/',\n    'name': originalManifest.description,\n    'short_name': originalManifest.name\n  };\n\n  var icons = [];\n\n  for (var size in originalManifest.icons) {\n    if (originalManifest.icons.hasOwnProperty(size)) {\n      icons.push({\n        'sizes' : size + 'x' + size,\n        'src': originalManifest.icons[size]\n      });\n    }\n  }\n\n  manifest.icons = icons;\n\n  var convertedManifestInfo = {\n    'content': manifest,\n    'format': c.BASE_MANIFEST_FORMAT\n  };\n\n  return callback(undefined, convertedManifestInfo);\n}\n\nvar requiredRootProperties = ['name', 'version', 'app'];\n\nvar validRootProperties = ['name', 'description', 'version', 'app',\n                           'background_page', 'icons', 'key',\n                           'minimum_chrome_version', 'offline_enabled',\n                           'permissions', 'update_url'];\n\nvar validAppProperties = ['urls', 'launch'];\nvar validAppLaunchProperties = ['web_url', 'container', 'height', 'width'];\n\nfunction matchFormat(manifestObj) {\n  var lowercasePropName;\n\n  // check required fields\n  for (var i = 0; i < requiredRootProperties.length; i++) {\n    if (!manifestObj.hasOwnProperty(requiredRootProperties[i])) {\n      return false;\n    }\n  }\n\n  if (!manifestObj.app.hasOwnProperty('launch') ||\n    !manifestObj.app.launch.hasOwnProperty('web_url')) {\n    return false;\n  }\n\n  for (var prop in manifestObj) {\n    if (manifestObj.hasOwnProperty(prop)) {\n      lowercasePropName = prop.toLowerCase();\n      if (validRootProperties.indexOf(lowercasePropName) === -1) {\n        return false;\n      }\n    }\n\n    if (lowercasePropName === 'app') {\n      for (var appProp in manifestObj.app) {\n        if (manifestObj.app.hasOwnProperty(appProp)) {\n          if (validAppProperties.indexOf(appProp) === -1) {\n            return false;\n          }\n\n          if (appProp === 'launch') {\n            for (var appLaunchProp in manifestObj.app.launch) {\n              if (manifestObj.app.launch.hasOwnProperty(appLaunchProp)) {\n                if (validAppLaunchProperties.indexOf(appLaunchProp) === -1) {\n                  return false;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  convertToBase: convertToBase,\n  matchFormat: matchFormat\n};\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/transformations/w3c.js":"'use strict';\n\nvar fs = require('fs'),\n    path = require('path');\n\nfunction convertToBase (manifestInfo, callback) {\n  if (!manifestInfo || !manifestInfo.content) {\n    return callback(new Error('Manifest content is empty or not initialized.'));\n  }\n\n  return callback(undefined, manifestInfo);\n}\n\nfunction convertFromBase (manifestInfo, callback) {\n  if (!manifestInfo || !manifestInfo.content) {\n    return callback(new Error('Manifest content is empty or not initialized.'));\n  }\n\n  return callback(undefined, manifestInfo);\n}\n\nfunction matchFormat (manifestObj) {\n  var schemaFile = path.resolve(__dirname, '..', 'assets', 'web-manifest.json');\n  var schema = JSON.parse(fs.readFileSync(schemaFile).toString());\n\n  var lowercasePropName;\n\n  for (var prop in manifestObj) {\n    if (manifestObj.hasOwnProperty(prop)) {\n      lowercasePropName = prop.toLowerCase();\n      if (!schema.properties.hasOwnProperty(lowercasePropName) && lowercasePropName.indexOf('_') <= 0) {\n        return false;\n      }\n\n      if (lowercasePropName === 'icons') {\n        var icons = manifestObj[prop];\n        for (var i = 0; i < icons.length; i++) {\n          for (var iconProp in icons[i]) {\n            if (icons[i].hasOwnProperty(iconProp) && !schema.definitions.icon.properties.hasOwnProperty(iconProp)) {\n              return false;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  convertToBase: convertToBase,\n  convertFromBase: convertFromBase,\n  matchFormat: matchFormat\n};\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/transformations/windows10.js":"﻿'use strict';\n\n// TODO: implement convertToBase function\nfunction convertToBase(manifestInfo, callback) {\n  return callback(new Error('Not yet implemented.'));\n}\n\n// TODO: implement matchFormat function\nfunction matchFormat() { //param: manifestObj\n  return false;\n}\n\nmodule.exports = {\n  convertToBase: convertToBase,\n  matchFormat: matchFormat\n};\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs-lib/lib/manifestTools/manifestLoader.js":"'use strict';\r\n\r\nvar fs = require('fs'),\r\n    url = require('url');\r\n\r\nvar cheerio = require('cheerio'),\r\n    request = require('request'),\r\n    Q = require('q');\r\n    \r\nvar constants = require('../constants'),\r\n    manifestConverter = require('./manifestConverter'),\r\n    manifestTypeDetector = require('./manifestTypeDetector'),\r\n    log = require('../log'),\r\n    utils = require('../utils');\r\n    \r\n// Request settings taken from https://github.com/InternetExplorer/modern.IE-static-code-scan/blob/master/app.js\r\nvar request = request.defaults({\r\n  followAllRedirects: true,\r\n  encoding: null,\r\n  jar: false,\r\n  headers: {\r\n    'Accept': 'text/html, application/xhtml+xml, */*',\r\n    'Accept-Language': 'en-US,en;q=0.5',\r\n    'User-Agent': 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0)'\r\n  }\r\n});\r\n\r\nfunction fetchManifestUrlFromSite (siteUrl, callback) {\r\n  \r\n  var deferred = Q.defer();\r\n  request({ uri: siteUrl }, function (err, response, body) {\r\n    if (err || response.statusCode !== 200) {\r\n      return deferred.reject(new Error('Failed to retrieve manifest from site.'));\r\n    }\r\n\r\n    var $ = cheerio.load(body);\r\n    var manifestUrl = $('link[rel~=\"manifest\"]').attr('href');\r\n    if (manifestUrl) {\r\n      var parsedManifestUrl = url.parse(manifestUrl);\r\n      if (!parsedManifestUrl.host) {\r\n        manifestUrl = url.resolve(siteUrl, parsedManifestUrl.pathname);\r\n      }\r\n    }\r\n\r\n    return deferred.resolve(manifestUrl);\r\n  });\r\n  \r\n  return deferred.promise.nodeify(callback);\r\n}\r\n\r\nfunction processManifestContents (data, manifestFormat, callback) {\r\n  var manifestObj = utils.parseJSON(data);\r\n\r\n  if (!manifestObj) {\r\n    return callback(new Error('Invalid manifest format.'));\r\n  }\r\n\r\n  var detectedFormat = manifestTypeDetector.detect(manifestObj);\r\n\r\n  if (manifestFormat) {\r\n    log.warn('Forcing to format ' + manifestFormat + '...');\r\n    detectedFormat = manifestFormat;\r\n  } else if (!detectedFormat) {\r\n    var availableFormats = listAvailableManifestFormats().join(', ');\r\n    return callback(new Error('Unable to detect the input manifest format. Try specifying the correct format using the -f <format> option. Available formats are: ' + availableFormats + '.'));\r\n  }\r\n  \r\n  log.info('Found a ' + detectedFormat + ' manifest...');\r\n  \r\n  var manifestInfo = {\r\n    content: manifestObj,\r\n    format: detectedFormat\r\n  };\r\n  \r\n  if (detectedFormat !== constants.CHROME_MANIFEST_FORMAT) {\r\n    return callback(null, manifestInfo);\r\n  }\r\n\r\n  // If the detected format is ChromeOS, convert it to W3C Manifest format. \r\n  log.info('Converting the Chrome OS manifest to W3C format...');\r\n  \r\n  manifestConverter.convertTo(manifestInfo, function (err, w3cManifest) {\r\n    // Assuming conversion was successful, running the manifest JSON through the detector again will return the W3C format type.\r\n    detectedFormat = manifestTypeDetector.detect(w3cManifest.content);\r\n    if (detectedFormat === constants.BASE_MANIFEST_FORMAT) {\r\n      log.info('Conversion to W3C Manifest format successful.');\r\n    }\r\n\r\n    return callback(null, {\r\n      content: w3cManifest.content,\r\n      format: detectedFormat\r\n    });\r\n  });\r\n}\r\n\r\nfunction downloadManifestFromUrl (manifestUrl, manifestFormat, callback) {\r\n\r\n  if (arguments.length < 3) {\r\n    if (utils.isFunction(manifestFormat)) {\r\n      callback = manifestFormat;\r\n      manifestFormat = undefined;      \r\n    }\r\n  }\r\n\r\n  var deferred = Q.defer();\r\n  request({ uri: manifestUrl }, function (err, response, data) {\r\n    if (err || response.statusCode !== 200) {\r\n      return deferred.reject(new Error('Failed to download manifest data.'));\r\n    }\r\n\r\n    Q.nfcall(processManifestContents, data, manifestFormat).then(function (manifestInfo) {\r\n      if (manifestInfo) {\r\n        manifestInfo.generatedUrl = manifestUrl;\r\n      }\r\n      \r\n      return deferred.resolve(manifestInfo);\r\n    })\r\n    .catch(function (err) {\r\n      return deferred.reject(err);\r\n    });\r\n  });\r\n  \r\n  return deferred.promise.nodeify(callback);\r\n}\r\n\r\nfunction getManifestFromSite (siteUrl, manifestFormat, callback) {\r\n\r\n  if (arguments.length < 3) {\r\n    if (utils.isFunction(manifestFormat)) {\r\n      callback = manifestFormat;\r\n      manifestFormat = undefined;      \r\n    }\r\n  }\r\n\r\n  return fetchManifestUrlFromSite(siteUrl).then(function (manifestUrl) {\r\n    if (manifestUrl) {\r\n      return Q.nfcall(downloadManifestFromUrl, manifestUrl, manifestFormat);\r\n    } else {\r\n      // TODO: review what to do in this case. (manifest meta tag is not present)\r\n      log.warn('No manifest found. A new manifest will be created.');\r\n\r\n      var shortName = utils.getDefaultShortName(siteUrl);\r\n      var manifestObj = {\r\n        content: {\r\n          'start_url': siteUrl,\r\n          'short_name': shortName\r\n        },\r\n        format: constants.BASE_MANIFEST_FORMAT\r\n      };\r\n      \r\n      return manifestObj;\r\n    }\r\n  })\r\n  .nodeify(callback);\r\n}\r\n\r\nfunction getManifestFromFile (filePath, manifestFormat, callback) {\r\n\r\n  if (arguments.length < 3) {\r\n    if (utils.isFunction(manifestFormat)) {\r\n      callback = manifestFormat;\r\n      manifestFormat = undefined;      \r\n    }\r\n  }\r\n\r\n  return Q.nfcall(fs.readFile, filePath).then(function (data) {\r\n    return Q.nfcall(processManifestContents, data, manifestFormat);    \r\n  })\r\n  .nodeify(callback);\r\n}\r\n\r\nfunction writeToFile (manifestInfo, filePath, callback) {\r\n  if (manifestInfo && manifestInfo.content) {\r\n    var jsonString = JSON.stringify(manifestInfo.content, undefined, 4);\r\n    return Q.nfcall(fs.writeFile, filePath, jsonString).nodeify(callback);\r\n  } \r\n  \r\n  return Q.reject(new Error('Manifest content is empty or invalid.')).nodeify(callback);\r\n}\r\n\r\nfunction listAvailableManifestFormats() {\r\n  return [constants.BASE_MANIFEST_FORMAT, constants.CHROME_MANIFEST_FORMAT, constants.EDGE_EXTENSION_MANIFEST_FORMAT];\r\n}\r\n\r\nmodule.exports = {\r\n  getManifestFromSite: getManifestFromSite,\r\n  getManifestFromFile: getManifestFromFile,\r\n  writeToFile: writeToFile,\r\n  fetchManifestUrlFromSite: fetchManifestUrlFromSite,\r\n  downloadManifestFromUrl: downloadManifestFromUrl,\r\n  listAvailableManifestFormats: listAvailableManifestFormats\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/manifoldjs.js":"#!/usr/bin/env node\n'use strict';\n\nvar Q = require('q');\n\nvar lib = require('manifoldjs-lib');\n\nvar log = lib.log,\n    packageTools = lib.packageTools,\n    platformTools = lib.platformTools,\n    manifestTools = lib.manifestTools,\n    validations = lib.validations; \n\nvar commands = require('./commands');\n\n// Get the available formats for the --forceManifestFormat parameter\nvar availableManifestFormats = manifestTools.listAvailableManifestFormats();\n\nfunction checkParameters(program) {\n  var unknownArgs = 0;\n  if (program.args.length > 0) {\n    var command = program.args[0].toLowerCase();\n    switch (command) {\n      case 'run':\n        unknownArgs = 3;\n        program.run = true;\n        break;\n      case 'package':        \n        unknownArgs = 2;\n        program.package = true;\n        break;\n      case 'platform':\n        unknownArgs = 4;\n        program.platform = true;\n        break;        \n      case 'open':\n        unknownArgs = 3;\n        program.open = true;\n        break;\n      case 'visualstudio':\n        unknownArgs = 1;\n        program.visualstudio = true;\n        break;\n      default:\n        unknownArgs = 1;\n        break;\n    }\n  } else {\n    if (!program.manifest) {\n      return 'You must specify either the web site URL or the location of a W3C manifest (-m | --manifest).';\n    }\n  }\n\n  if (program.args.length > unknownArgs) {\n    return 'Unexpected parameters - [' + program.args.slice(unknownArgs).join() + '].';\n  }\n\n  // check platforms\n  // TODO: loading registered platforms twice, by calling platformsValid and to generate the usage text. Consolidate!\n  if (program.platforms) {\n    var platforms = program.platforms.split(/[\\s,]+/);\n    if (!validations.platformsValid(platforms)) {\n      return 'Invalid platform(s) specified.';\n    }\n  }\n\n  // check log level\n  if (program.loglevel) {\n    if (!validations.logLevelValid(program.loglevel)) {\n      return 'Invalid loglevel specified. Valid values are: debug, info, warn, error.';\n    }\n  }\n\n  if (program.forceManifestFormat) {\n    if (!validations.manifestFormatValid(program.forceManifestFormat)) {\n      return 'Invalid manifest format specified. Valid values are: ' + availableManifestFormats.join(', ') + '.';\n    }\n  }\n}\n\n// get the list of registered platforms\nvar availablePlatforms = platformTools.listPlatforms();\n\n// dynamically generates the help text with the list of registered\n// platforms and splits it into multiple lines so that it doesn't \n// break the layout of the usage text\nfunction getPlatformHelpText() {\n  // offset of the column where the parameter help text starts\n  var columnOffset = 38;\n\n  // maximum width of the help text \n  var maxWidth = 80;\n\n  return availablePlatforms.reduce(function (list, platform) {  \n    var segmentLength = list.length - list.lastIndexOf('\\n') - 1;\n    if (segmentLength > maxWidth - columnOffset) {\n      list += '\\n';\n    }\n    \n    return list + '[' + (list ? ',' : '') + platform + ']';  \n  }, '').replace(/\\n/g, '\\n' + new Array(columnOffset - 1).join(' '));  \n}\n\nvar program = require('commander')\n             .usage('<website-url> [options]' +\n                    '\\n         manifoldjs -m <manifest-location> [options]' +\n                    '\\n           options:' +\n                    '\\n             -d | --directory, -s | --short-name, -l | --loglevel,' +\n                    '\\n             -p | --platforms, -m | --manifest, -f | --forceManifestFormat, -c | --crosswalk' +                    \n                    '\\n  -or-' +\n                    '\\n         manifoldjs package [project-directory] [options]' +\n                    '\\n           options:' +\n                    '\\n             -l | --loglevel,  -p | --platforms, -S | --Sign' +\n                    '\\n' +\n                    '\\n  -or-' +\n                    '\\n         manifoldjs platform add <platform-id> <source> [options]' +\n                    '\\n         manifoldjs platform remove <platform-id> [options]' +\n                    '\\n         manifoldjs platform list [options]' +\n                    '\\n           options:' +\n                    '\\n             -l | --loglevel' +\n                    '\\n' +\n                    '\\n  -or-' +\n                    '\\n         manifoldjs run <platform> [project-directory]' +\n                    '\\n           options:' +\n                    '\\n             -l | --loglevel' +\n                    '\\n' +\n                    '\\n  -or-' +\n                    '\\n         manifoldjs open <platform> [project-directory]' +\n                    '\\n           options:' +\n                    '\\n             -l | --loglevel')\n             .option('-d, --directory <app-dir>', 'path to the generated project files')\n             .option('-s, --shortname <short-name>', 'application short name')\n             .option('-l, --loglevel <log-level>', 'debug|info|warn|error', 'warn')\n             .option('-p, --platforms <platforms>', getPlatformHelpText()) \n             .option('-b, --build', 'forces the building process', false)\n             .option('-m, --manifest <manifest-location>', 'location of the W3C Web App manifest\\n                                    ' +\n                                                    'file (URL or local path)')\n             .option('-c, --crosswalk', 'enable Crosswalk for Android', false)\n             .option('-S, --Sign', 'return a signed package in windows', false)\n             .option('-w, --webAppToolkit', 'adds the Web App Toolkit cordova plugin', false)\n             .option('-f, --forceManifestFormat <format>', availableManifestFormats.join('|'))\n             .option('-W, --DotWeb', 'generate a .web package in windows', false)\n             .parse(process.argv);\n\nif (!process.argv.slice(2).length) {\n  program.help();\n}\n\nvar validationResult = checkParameters(program);\nif (validationResult) {\n  log.error(validationResult);\n  process.exit(1);\n}\n\nglobal.logLevel = program.loglevel;\nlog.setLevel(global.logLevel);\n\nif (process.env.NODE_ENV === 'development') {\n  Q.longStackSupport = true;\n}\npackageTools.checkForUpdate(function (err, updateAvailable) {\n  if (!err && updateAvailable) {\n    log.write();\n    log.write('*******************************************************************************');\n    log.write('A new version of ManifoldJS is available (v' + updateAvailable + ').');\n    log.write('We recommend that you upgrade.');\n    log.write('*******************************************************************************');\n    log.write();\n  }\n  \n  var command;\n  if (program.run) {\n    command = commands.run(program);\n  }\n  else if (program.open) {\n    command = commands.open(program);\n  }\n  else if (program.visualstudio) {\n    command = commands.visualstudio(program);\n  }\n  else if (program.package) {\n    command = commands.package(program);\n  }\n  else if (program.platform) {\n    command = commands.platform(program);\n  }\n  else {\n    command = commands.generate(program);\n  }\n  \n  command.catch(function (err) {\n    var errmsg = err.getMessage();\n    if (log.getLevel() !== log.levels.DEBUG) {\n      errmsg += '\\nFor more information, run manifoldjs with the diagnostics level set to debug (e.g. manifoldjs [...] -l debug)';\n    }\n\n    log.error(errmsg);\n  });\n});\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/Gruntfile.js":"'use strict';\r\n\r\nmodule.exports = function (grunt) {\r\n  // Show elapsed time at the end\r\n  require('time-grunt')(grunt);\r\n  // Load all grunt tasks\r\n  require('load-grunt-tasks')(grunt);\r\n\r\n  grunt.initConfig({\r\n    jshint: {\r\n      options: {\r\n        jshintrc: '.jshintrc',\r\n        reporter: require('jshint-stylish')\r\n      },\r\n      gruntfile: {\r\n        src: ['Gruntfile.js']\r\n      },\r\n      js: {\r\n        src: ['*.js', 'lib/**/*.js']\r\n      },\r\n      test: {\r\n        src: ['test/**/*.js']\r\n      },\r\n      teamcity: {\r\n        options: {\r\n          reporter: require('jshint-teamcity')\r\n        },\r\n        src: ['*.js', 'lib/**/*.js', 'test/**/*.js', 'Gruntfile.js']\r\n      },\r\n    },\r\n    mochaTest: {\r\n      test: {\r\n        options: {\r\n          reporter: 'spec',\r\n          require: 'coverage/blanket'\r\n        },\r\n        src: ['test/**/*.js']\r\n      },\r\n      'html-cov': {\r\n        options: {\r\n          reporter: 'html-cov',\r\n          quiet: true,\r\n          captureFile: 'coverage.html'\r\n        },\r\n        src: ['lib/**/*.js']\r\n      },\r\n      // The travis-cov reporter will fail the tests if the\r\n      // coverage falls below the threshold configured in package.json\r\n      'travis-cov': {\r\n        options: {\r\n          reporter: 'travis-cov'\r\n        },\r\n        src: ['lib/**/*.js']\r\n      },\r\n      'teamcity-test': {\r\n        options: {\r\n          reporter: 'mocha-teamcity-reporter'\r\n        },\r\n        src: ['test/**/*.js']\r\n      }\r\n    },\r\n    watch: {\r\n      gruntfile: {\r\n        files: '<%= jshint.gruntfile.src %>',\r\n        tasks: ['jshint:gruntfile']\r\n      },\r\n      js: {\r\n        files: '<%= jshint.js.src %>',\r\n        tasks: ['jshint:js', 'mochaTest']\r\n      },\r\n      test: {\r\n        files: '<%= jshint.test.src %>',\r\n        tasks: ['jshint:test', 'mochaTest']\r\n      },\r\n      windows10: {\r\n        files: ['../manifoldjs-windows10/lib/*.js'],\r\n        tasks: ['sync:windows10']\r\n      },\r\n      lib: {\r\n        files: ['../manifoldjs-lib/lib/*.js', '../manifoldjs-lib/lib/manifestTools/*.js'],\r\n        tasks: ['sync:lib']\r\n      }\r\n    },\r\n    sync: {\r\n    \twindows10: {\r\n      \t\tfiles: [{\r\n      \t\t\tsrc: ['../manifoldjs-windows10/lib/*.js'],\r\n      \t\t\tdest: 'node_modules/manifoldjs-windows10'  \r\n      \t\t}],\r\n      \t\tverbose: true,\r\n      \t\tfailOnError: true,\r\n      \t\tupdateAndDelete: false\r\n\t\t  },\r\n      lib: {\r\n            files: [{\r\n              src: ['../manifoldjs-lib/lib/*.js','../manifoldjs-lib/lib/manifestTools/*.js'],\r\n              dest: 'node_modules/manifoldjs-lib'  \r\n            }],\r\n            verbose: true,\r\n            failOnError: true,\r\n            updateAndDelete: false\r\n      }\r\n\t  }\r\n  });                \r\n\r\n  grunt.registerTask('jshint-all', ['jshint:js', 'jshint:test', 'jshint:gruntfile']);\r\n  grunt.registerTask('tests-all', ['mochaTest:test', 'mochaTest:html-cov', 'mochaTest:travis-cov']);\r\n\r\n  grunt.registerTask('default', ['jshint-all', 'tests-all']);\r\n\r\n  grunt.registerTask('teamcity-tests', ['mochaTest:teamcity-test']);\r\n  grunt.registerTask('teamcity-jshint', ['jshint:teamcity']);\r\n\r\n  grunt.registerTask('teamcity-build', ['teamcity-jshint', 'teamcity-tests']);\r\n\r\n  grunt.registerTask('development', ['watch']);\r\n  grunt.registerTask('forceSync', ['sync:windows10', 'sync:lib']);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/commands/generate.js":"'use strict';\r\n\r\nvar url = require('url'),\r\n    path = require('path');\r\n\r\nvar Q = require('q');\r\n\r\nvar lib = require('manifoldjs-lib');\r\n\r\nvar log = lib.log,\r\n    manifestTools = lib.manifestTools,\r\n    platformTools = lib.platformTools,\r\n    projectBuilder = lib.projectBuilder,\r\n    utils = lib.utils;\r\n\r\nvar build = require('./package');\r\n\r\nfunction getW3cManifest(siteUrl, manifestLocation, manifestFormat, callback) {\r\n  function resolveStartURL(err, manifestInfo) {\r\n    if (err) {\r\n      return callback(err, manifestInfo);\r\n    }\r\n\r\n    if (manifestInfo.format === lib.constants.BASE_MANIFEST_FORMAT) {\r\n      return manifestTools.validateAndNormalizeStartUrl(siteUrl, manifestInfo, callback);\r\n    } else {\r\n      return callback(undefined, manifestInfo);\r\n    }\r\n  }\r\n  \r\n  if (siteUrl) {\r\n    var parsedSiteUrl = url.parse(siteUrl);\r\n    if (!parsedSiteUrl.hostname) {\r\n      return callback(new Error('The site URL is not a valid URL.'));\r\n    }\r\n  }\r\n\r\n  if (manifestLocation) {\r\n    var parsedManifestUrl = url.parse(manifestLocation);\r\n    if (parsedManifestUrl && parsedManifestUrl.host) {\r\n      // download manifest from remote location\r\n      log.info('Downloading manifest from ' + manifestLocation + '...');\r\n      manifestTools.downloadManifestFromUrl(manifestLocation, manifestFormat, resolveStartURL);\r\n    } else {\r\n      // read local manifest file\r\n      log.info('Reading manifest file ' + manifestLocation + '...');\r\n      manifestTools.getManifestFromFile(manifestLocation, manifestFormat, resolveStartURL);\r\n    }\r\n  } else if (siteUrl) {    \r\n    // scan a site to retrieve its manifest\r\n    log.info('Scanning ' + siteUrl + ' for manifest...');\r\n    manifestTools.getManifestFromSite(siteUrl, manifestFormat, resolveStartURL);\r\n  } else {\r\n    return callback(new Error('A site URL or manifest should be specified.'));\r\n  }\r\n}\r\n\r\nfunction generateApp(program) {\r\n  \r\n  var siteUrl = program.args[0];\r\n  var rootDir = program.directory ? path.resolve(program.directory) : process.cwd();\r\n  \r\n  var deferred = Q.defer();\r\n  \r\n  function callback (err, manifestInfo) {\r\n    if (err) {\r\n      return deferred.reject(err);\r\n    }\r\n    \r\n    // Fix #145: don't require a short name\r\n    manifestInfo.content.short_name = manifestInfo.content.short_name || \r\n                                      manifestInfo.content.name ||\r\n                                      manifestInfo.default.short_name;\r\n\r\n    // if specified as a parameter, override the app's short name\r\n    if (program.shortname) {\r\n      manifestInfo.content.short_name = program.shortname;\r\n    }\r\n \r\n    log.debug('Manifest contents:\\n' + JSON.stringify(manifestInfo.content, null, 4));\r\n    \r\n    // add generatedFrom value to manifestInfo for telemetry\r\n    manifestInfo.generatedFrom = 'CLI';\r\n\r\n    var platforms = [];\r\n    if (program.platforms) {\r\n      platforms = program.platforms.split(/[\\s,]+/);\r\n    } else {\r\n      platforms = platformTools.listPlatforms();\r\n      // Remove edgeextension from the default platforms for W3C manifests\r\n      if (manifestInfo.format === lib.constants.BASE_MANIFEST_FORMAT) {\r\n        var edgeIndex = platforms.indexOf('edgeextension');\r\n        if (edgeIndex > -1) {\r\n          log.debug('Removing Edge Extension platform. The W3C manifest format is not currently supported by this platform.');\r\n          platforms.splice(edgeIndex, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Create the apps for the specified platforms\r\n    return projectBuilder.createApps(manifestInfo, rootDir, platforms, program).then(function (projectDir) {\r\n      if (program.build) {\r\n        program.args[1] = projectDir;\r\n        return build(program, platforms).catch(function (err) {\r\n          log.warn('One or more platforms could not be built successfully. Correct any errors and then run manifoldjs package [project-directory] [options] to build the applications.');\r\n          // return deferred.reject(err);\r\n        });\r\n      }\r\n    })\r\n    .then(function () {\r\n      log.info('The application(s) are ready.');\r\n      return deferred.resolve();\r\n    })\r\n    .catch(function (err) {\r\n      return deferred.reject(err);\r\n    });\r\n  };\r\n  \r\n  getW3cManifest(siteUrl, program.manifest, program.forceManifestFormat, callback);\r\n  \r\n  return deferred.promise;\r\n};\r\n\r\nmodule.exports = generateApp;","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/commands/index.js":"'use strict';\r\n\r\nmodule.exports = {\r\n  generate:     require('./generate'),\r\n  package:      require('./package'),\r\n  run:          require('./run'),\r\n  open:         require('./open'),\r\n  visualstudio: require('./visualstudio'),\r\n  platform:     require('./platform')\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/commands/open.js":"'use strict';\r\n\r\nvar Q = require('q');\r\n\r\nvar lib = require('manifoldjs-lib');\r\n  \r\nvar log = lib.log,\r\n    projectBuilder = lib.projectBuilder;\r\n    \r\nfunction openApp (program) {\r\n\r\n  if (program.args.length < 2) {\r\n    return Q.reject(new Error('You must specify a platform.'));\r\n  } \r\n  \r\n  var platform = program.args[1];\r\n  var projectDir = program.args.length < 3 ? process.cwd() : program.args[2];\r\n  return projectBuilder.openApp(platform, projectDir, program);\r\n}\r\n\r\nmodule.exports = openApp;\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/commands/package.js":"'use strict';\r\n\r\nvar lib = require('manifoldjs-lib');\r\n\r\nvar log = lib.log,\r\n    platformTools= lib.platformTools,\r\n    projectBuilder = lib.projectBuilder;\r\n\r\nfunction packageApps(program, platforms) {\r\n  if (!platforms) {\r\n    platforms = program.platforms ? \r\n                program.platforms.split(/[\\s,]+/) :\r\n                platformTools.listPlatforms();\r\n  }\r\n\r\n  var projectDir = program.args.length < 2 ? process.cwd() : program.args[1];\r\n  return lib.projectTools.getProjectPlatforms(projectDir).then(function (projectPlatforms) {\r\n    // exclude any platforms not present in the project\r\n    platforms = platforms.filter(function (platform) {\r\n      return projectPlatforms.indexOf(platform) >= 0;\r\n    });\r\n    \r\n    return projectBuilder.packageApps(platforms, projectDir, program); \r\n  });\r\n}\r\n\r\nmodule.exports = packageApps;","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/commands/platform.js":"'use strict';\r\n\r\nvar fs = require('fs'),\r\n    path = require('path');\r\n\r\nvar Q = require('q');\r\n\r\nvar lib = require('manifoldjs-lib');\r\n\r\nvar log = lib.log,\r\n    platformTools = lib.platformTools,\r\n    utils = lib.utils;\r\n\r\n// registers a new platform module    \r\nfunction addPlatform (program) {\r\n  if (program.args.length < 3) {\r\n    return Q.reject(new Error('You must specify a platform ID.'));    \r\n  }\r\n  \r\n  if (program.args.length < 4) {\r\n    return Q.reject(new Error('You must specify a package source for the platform. This can be an npm package, a GitHub URL, or a local path.'));    \r\n  }\r\n  \r\n  var platformId = program.args[2].toLowerCase();\r\n  var source = program.args[3];\r\n  \r\n  return platformTools.addPlatform(platformId, source).then(function () {\r\n    log.info('The \\'' + platformId + '\\' platform was registered successfully.');      \r\n  });\r\n}\r\n\r\n// removes a registered platform module\r\nfunction removePlatform (program) {\r\n  if (program.args.length < 3) {\r\n    return Q.reject(new Error('You must specify a platform ID.'));    \r\n  }\r\n \r\n  var platformId = program.args[2].toLowerCase();\r\n  \r\n  return platformTools.removePlatform(platformId).then(function () {\r\n    log.info('The \\'' + platformId + '\\' platform was unregistered successfully.');      \r\n  });\r\n}\r\n\r\nfunction listPlatforms (program) {\r\n  try {\r\n    var platforms = platformTools.listPlatforms();  \r\n    log.write('Available platforms are: ' + platforms.join(', '));\r\n    return Q.resolve();\r\n  }\r\n  catch (err) {\r\n    return Q.reject(err);\r\n  }\r\n}\r\n\r\nfunction platformCommands (program) {\r\n  if (program.args.length < 2) {\r\n    return Q.reject(new Error('You must specify a platform operation: add, remove, or list.'));    \r\n  }\r\n\r\n  var command = program.args[1].toLowerCase();\r\n  switch (command) {\r\n    case 'add':\r\n      return addPlatform(program);\r\n    \r\n    case 'remove':\r\n      return removePlatform(program);\r\n      \r\n    case 'list':\r\n      return listPlatforms(program);\r\n      \r\n    default:\r\n      return Q.reject(new Error('Unknown option \\'' + command + '\\' specified.'));\r\n  }  \r\n}\r\n\r\nmodule.exports = platformCommands; \r\n    \r\n\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/commands/run.js":"'use strict';\r\n\r\nvar Q = require('q');\r\n\r\nvar lib = require('manifoldjs-lib');\r\n  \r\nvar log = lib.log,\r\n    projectBuilder = lib.projectBuilder;\r\n    \r\nfunction runApp (program) {\r\n\r\n  if (program.args.length < 2) {\r\n    return Q.reject(new Error('You must specify a platform.'));\r\n  } \r\n  \r\n  var platform = program.args[1];\r\n  var projectDir = program.args.length < 3 ? process.cwd() : program.args[2];\r\n  return projectBuilder.runApp(platform, projectDir, program);\r\n}\r\n\r\nmodule.exports = runApp;\r\n","/home/travis/build/npmtest/node-npmtest-manifoldjs/node_modules/manifoldjs/commands/visualstudio.js":"'use strict';\r\n\r\nvar Q = require('q');\r\n\r\nvar lib = require('manifoldjs-lib');\r\n\r\nvar CustomError = lib.CustomError,\r\n    exec = lib.processTools.exec,\r\n    fileTools = lib.fileTools,\r\n    log = lib.log;\r\n\r\nvar open = require('./open');\r\n\r\nfunction isWindows10Version (version) {\r\n  return /^10/.test(version);\r\n}\r\n\r\nfunction getWindowsVersion (callback) {\r\n  log.debug('Obtaining Windows version...');\r\n  exec('powershell', ['(Get-WmiObject win32_operatingsystem).version']).then(function (result) {\r\n    return result.stdout.trim();\r\n  })\r\n  .catch (function (err) {\r\n    return Q.reject(new CustomError('Failed to run the app for Windows platform.', err));    \r\n  })\r\n  .nodeify(callback); \r\n}\r\n\r\n// implements the original behavior of the visualstudio command\r\n//  open windows10 project, if available, otherwise, open the windows project\r\nfunction runApp(program) {\r\n  \r\n  log.warn('The \\'visualstudio\\' command is deprecated. Use \\'manifoldjs open <windows|windows10>\\' instead.');\r\n  \r\n  var deferred = Q.defer();\r\n  \r\n  var dir = process.cwd();\r\n  fileTools.searchFile(dir, 'App.jsproj', function (err, results) {\r\n    Q.ninvoke(getWindowsVersion).then(function (version) {\r\n      if (results && results.length > 0 && isWindows10Version(version)) {\r\n        program.args.push('windows10'); \r\n        return open(program).then(function () {\r\n          deferred.resolve();\r\n        });\r\n      }\r\n      \r\n      fileTools.searchFile(dir, 'CordovaApp.sln', function (err, results) {\r\n        if (results && results.length > 0) {\r\n          program.args.push('windows');\r\n          return open(program).then(function () {\r\n            deferred.resolve();\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n  \r\n  return deferred.promise;\r\n}\r\n\r\nmodule.exports = runApp;\r\n"}